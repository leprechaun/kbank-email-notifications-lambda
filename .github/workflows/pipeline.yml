name: CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install poetry
      run: |
        pip install poetry

    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Run tests
      run: |
        poetry run pytest -v

  build:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install poetry
      run: |
        pip install pip
        pip install poetry

    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Build
      run: |
        poetry build --config-settings local-version=0.1.${{ github.run_number }}
    - name: Package
      run: |
        ./auto/package
    - name: Upload Package
      uses: actions/upload-artifact@v4
      with:
        name: package-artifact
        path: artifact.zip

  deploy-dev:
    runs-on: ubuntu-latest
    environment: dev
    needs:
      - build
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v4
      with:
        name: package-artifact
    - uses: hashicorp/setup-terraform@v3
    - run: |
        find ./ | grep -v git
    - name: Deploy
      working-directory: infra
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        terraform init
        terraform workspace select -or-create dev
        terraform apply -auto-approve

  deploy-prod:
    runs-on: ubuntu-latest
    environment: prod
    needs:
      - deploy-dev
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v4
      with:
        name: package-artifact
    - uses: hashicorp/setup-terraform@v3
    - run: |
        find ./ | grep -v git
    - name: Deploy
      working-directory: infra
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        terraform init
        terraform workspace select -or-create prod
        terraform apply -auto-approve
